def binary_search(arr, target):
    low = 0
    high = len(arr) - 1

    while low <= high:
        mid = (low + high) // 2

        if arr[mid] == target:
            return mid
        elif arr[mid] < target:
            low = mid + 1
        else:
            high = mid - 1

    return -1

# Пример использования
arr = [2, 4, 6, 8, 10]
target = 8
print(binary_search(arr, target))


"""В этой функции:

* `low` и `high` обозначают индексы начального и конечного элементов диапазона поиска.
* `mid` — индекс середины диапазона, где мы проверяем, равна ли значение в этот момент целевое значение или нет.
* Если `arr[mid]` равно целевому значению, функция возвращает индекс этого значения.
* Если `arr[mid]` меньше целевого значения, мы обновляем `low` так, чтобы оно было на один больше `mid`.
* Иначе (`arr[mid]` больше целевого значения), мы обновляем `high` так, чтобы оно было на один меньше `mid`.
* Функция продолжает повторять этот процесс, пока диапазон не станет пустым. Если в результате этого процесса
диапазон становится пустым, функция возвращает -1, указывая на то, что целевое значение не найдено."""