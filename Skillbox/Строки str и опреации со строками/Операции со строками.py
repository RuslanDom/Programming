# • isalpha(str): если строка в Python включает в себя лишь алфавитные символы, возвращается True;

# • islower(str): True возвращается, если строка включает лишь символы в нижнем регистре;

# • isupper(str): True, если символы строки в Python находятся в верхнем регистре;

# • startswith(str): True, когда строка начинается с подстроки str;

# • isdigit(str): True, когда каждый символ строки — цифра, Римские цифры, дроби и валюты не считаются цифрами;

# • isnumeric(): True, аналогично isdigit(), Целые числа, нижние и надстрочные индексы,
# дроби и римские цифры в Unicode считаются числами;

# • isdecimal(): True, Этот метод проверяет символы на наличие десятичных чисел / символов;

# • endswith(str): True, когда строка в Python заканчивается на подстроку str;

# • upper(): строка переводится в верхний регистр;

# • lower(): строка переводится в нижний регистр;

# • title(): для перевода начальных символов всех слов в строке в верхний регистр;

# • capitalize(): для перевода первой буквы самого первого слова строки в верхний регистр;

# • lstrip(): из строки в Python удаляются начальные пробелы;

# • rstrip(): из строки в Python удаляются конечные пробелы;

# • strip(): из строки в Python удаляются и начальные, и конечные пробелы;

# • rjust(width): когда длина строки меньше, чем параметр width, слева добавляются пробелы,
# строка выравнивается по правому краю;

# • ljust(width): когда длина строки в Python меньше, чем параметр width,
# справа от неё добавляются пробелы для дополнения значения width,
# при этом происходит выравнивание строки по левому краю;

# • find(str[, start [, end]): происходит возвращение индекса первого совпадения подстроки в строку в Python.
# В том случае, если подстрока не найдена, выполняется возвращение числа -1;

# • rfind(): возвращает индекс последнего совпадения

# • index(): помогает найти положение данной подстроки по аналогии с find().
# Единственное отличие в том, что index() бросит исключение в том случае,
# если подстрока не будет найдена, а find() просто вернет -1

# • center(width): когда длина строки в Python меньше, чем параметр width,
# слева и справа добавляются пробелы (равномерно) для дополнения значения width,
# причём происходит выравнивание строки по центру;

# • split(): строку в Python разбиваем на строки и помещает в список в зависимости от разделителя
# при пустых скобках удаляет все пробелы;

# • replace(old, new[, num]): в строке одна подстрока меняется на другую;

# • join(strs): строки объединяются в одну строку, между ними вставляется определённый разделитель.

# • count('hello'): подсчитывает кол-во вхождений подстроки которую передают в аргументе, в строку
